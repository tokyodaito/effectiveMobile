plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.bogsnebes.effectivemobile'
    compileSdk 33

    viewBinding {
        enabled = true
    }

    kapt {
        correctErrorTypes true
    }

    defaultConfig {
        applicationId "com.bogsnebes.effectivemobile"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ext {
    // Версии библиотек
    coreKtxVersion = '1.9.0'
    appCompatVersion = '1.6.1'
    materialVersion = '1.8.0'
    constraintLayoutVersion = '2.1.4'
    inputMaskVersion = '7.2.4'
    kotlinStdlibVersion = '1.9.0'
    coilVersion = '1.4.0'
    roomVersion = '2.5.2'
    hiltVersion = '2.48'
    okhttpVersion = '4.12.0'
    retrofitVersion = '2.9.0'
    coroutinesVersion = '1.7.3'
    rxjavaVersion = '2.2.21'
    rxAndroidVersion = '2.1.1'
    lifecycleVersion = '2.3.1'
    activityKtxVersion = '1.2.3'
    fragmentKtxVersion = '1.5.2'
    gsonConverterVersion = '2.9.0'
    rxjavaAdapterVersion = '2.9.0'
    maskAndroid = '7.2.4'
}

dependencies {
    // AndroidX
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinStdlibVersion"

    // UI
    implementation("io.coil-kt:coil:$coilVersion")

    // Room Database
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:2.3.0"

    // Dependency Injection - Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // LiveData & ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // KTX for Activity and Fragment
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Retrofit converters & adapters
    implementation "com.squareup.retrofit2:converter-gson:$gsonConverterVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxjavaAdapterVersion"

    // input-mask-android
    implementation "com.redmadrobot:input-mask-android:$maskAndroid"
}
